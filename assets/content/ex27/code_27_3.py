from math import dist

# Для метода DBSCAN мы записываем все данные в один массив, 
# чтобы рассоединить их проверкой
data = []
# Читаем файл и сохраняем точки
for line in open('27_A.txt'):
    x, y = map(float, line.replace(',', '.').split())
    data.append([x, y])

# Создадим массив для всех кластеров
clusters = []
# Будем перебирать точку из data и удалять ее оттуда 
# после обработки. Пока точки там есть:
while data:
    # Создадим новый кластер из последней точки 
    # data и сразу удалим ее из data
    cl = [data.pop()]
    # Мы будем для каждой новой точки искать ее соседей.
    # (изначально для случайной точки с конца файла)
    for p in cl:
        # будем перебирать все точки из data и сохранять
        # их к соседям, если расстояние между ней и первой 
        # точкой меньше какого-то условного числа, напр., 2
        соседи = [p1 for p1 in data if dist(p1, p) < 2]
        # пополняем кластер найденными соседями
        cl += соседи
        # и удаляем их из кандидатов на новые точки (data)
        for p1 in соседи: data.remove(p1)
        # После, цикл повторится, если мы добавили новые точки,
        # или остановится, если таких не нашли.
    # Если цикл остановился, то значит точек больше нет, и мы
    # получили итоговый кластер. Добавлем его к общим кластерам:
    clusters.append(cl)