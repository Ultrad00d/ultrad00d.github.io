f = open('26_6.txt')

# вводные данные первой строки
n, m, k = map(int, f.readline().split())

# создадим массив длины количества мест в ряду кинозала,
# равных максимальному ряду в зале (самому дальнему)
min_row = [m + 1] * (k + 1)

# будем построчно читать файл
for _ in range(n):
    # возьмем ряд и место у строки
    row, seat = map(int, f.readline().split())
    # и запишем в min_row от места минимальный занятый ряд
    min_row[seat] = min(min_row[seat], row)
    # (для первого места это может быть первый ряд, 
    # для второго 20й, для третьего 1й и тд)

# нам нужен максимальный ряд от сцены, то есть наибольшее число
ans = []

# номер 17: перебираем пары seat и seat + 1, для каждой находим
# минимальный занятый ряд для каждого сиденья
for seat in range(1, k):
    min_row_for_seat_1 = min_row[seat]
    min_row_for_seat_2 = min_row[seat + 1]
    
    # нам нужно чтобы люди могли сесть вместе и перед ними 
    # все места были бы свободными, поэтому мы берем передний ряд 
    # из двух (минимальный) и вычитаем из него 1, чтобы получить 
    # ряд перед минимально занятым
    min_common_row = min(min_row_for_seat_1, min_row_for_seat_2) - 1
    
    # запишем найденный ряд и места к нему
    ans.append((min_common_row, seat, seat + 1))

# выведем максимальный ряд (так как ряд стоял в начале, сортировка
# идет по нему)
print(max(ans))

# Тк просили минимальное место, то ответ будет -> 21028 6660