f = open('26_9.txt')

# вводные данные первой строки
s, n = map(int, f.readline().split())

# Прочитаем файл и отсортируем его по возрастанию, 
# тк нам нужно максимизировать кол-во файлов, 
# а если взять пару самых больших файлов, то места
# может остаться недостаточно для более маленьких.
data = sorted([int(k) for k in f])

# Файлы, которые точно стоит сохранить на диск,
# будем добавлять в disk
disk = []
# На каждом шаге будем смотреть, сколько места
# осталось на диске; в начале это s
disk_space = s

# переберем все файлы:
for item in data:
    # если этот файл помещается на диск, 
    # то берем его
    if disk_space - item > 0:
        # вычтем из места на диске размер файла
        disk_space -= item
        disk.append(item)

# Этим циклом мы взяли первые сколько-то самых 
# маленьких файлов. Это количество будет максимальным:
print(len(disk), end=' ')

# Чтобы наполнить диск по-максимуму, нужно вместо
# некоторых маленьких файлов взять побольше. 
# Будем брать файлы с конца диска, тк если добавлять
# числа к ним, то будут файлы, которые мы еще не 
# добавили на диск. Осталось места:
print(disk_space)
# Если сразу найдется файл, добавление которого полностью
# заполнит диск, то возьмем его:
if disk[-1] + disk_space in data: disk[-1] += disk_space
# И такой файл находится!

# Тогда теперь места на диске осталось 0, 
# а максимальный файл - последний (убедимся ч/з max())
print(max(disk))