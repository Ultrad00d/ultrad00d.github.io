f = open('26_3.txt')

# Вводные данные первых двух строк: 
# Всего камер и всего обращений
total_camer = int(f.readline())
total_requests = int(f.readline())

# создадим массив хранилища длиной всех камер
storage = [0] * total_camer

# вводные данные будем сохранять в data
data = []
for _ in range(total_requests):
    start, end = map(int, f.readline().split())
    data.append([start, end])
# отсортируем входные данные по возрастанию первого элемента,
# а при совпадении - второго. Получим массив, обращения в котором
# идут от начала дня (сначала в первую минуту, потом во вторую и тд.)
data.sort()

# сколько всего людей смогло воспользоваться багажом:
count = 0

# будем перебирать все заявки из data
for i in range(total_requests):
    # время обращения, и время получения
    start, end = data[i]
    # и посмотрим в какую камеру его можно положить
    for camera in range(total_camer):
        # ячейка будет запоминать только время, когда человек придет 
        # забрать багаж, чтобы сравнивать, можно ли положить новый

        # Если время обращения строго больше времени записанному в ячейке,
        # а то есть время получения последнего багажа в ней, то в нее можно
        # положить новый багаж, тк "Для того, чтобы разгрузить или
        # загрузить ячейку багажом, необходима 1 минута." по условию
        if storage[camera] < start:
            # запишем в ячейку время получения
            storage[camera] = end
            # добавим человека, воспользовавшимся багажом
            count += 1
            # запомним номер камеры для ответа
            # (последняя камера последней задаст значение)
            last = camera + 1 # индексация ячеек в задаче с 1
            break

# выводим ответ строго в правильном порядке
print(count, last)